<?php
use CRM_Banking_ExtensionUtil as E;

class CRM_Banking_Form_Report_BankingTransactions extends CRM_Report_Form {

  protected $_addressField = FALSE;

  protected $_emailField = FALSE;

  protected $_summary = NULL;

  protected $_customGroupExtends = null;
  protected $_customGroupGroupBy = FALSE;

  protected $bankingStatuses = array();

  function __construct() {
    $statusApi = civicrm_api3('OptionValue', 'get', array('option_group_id' => 'civicrm_banking.bank_tx_status', 'options' => array('limit' => 0)));
    foreach($statusApi['values'] as $status) {
      $this->bankingStatuses[$status['id']] = $status['label'];
    }

    $this->_columns = array(
      'civicrm_bank_tx' => array(
        'fields' => array(),
        'filters' => array(
          'status_id' => array(
            'title' => E::ts('Status'),
            'type' => CRM_Utils_Type::T_INT,
            'operatorType' => CRM_Report_Form::OP_MULTISELECT,
            'options' => $this->bankingStatuses,
          ),
          'booking_date' => array(
            'title' => E::ts('Booking date'),
            'type' => CRM_Utils_Type::T_DATE,
            'operatorType' => CRM_Report_Form::OP_DATE,
          ),
          'value_date' => array(
            'title' => E::ts('Value date'),
            'type' => CRM_Utils_Type::T_DATE,
            'operatorType' => CRM_Report_Form::OP_DATE,
          ),
        ),
      ),
    );
    $this->_groupFilter = FALSE;
    $this->_tagFilter = FALSE;
    $this->_add2groupSupported = FALSE;
    $this->_noFields = TRUE;
    parent::__construct();
  }

  function preProcess() {
    $this->assign('reportTitle', E::ts('CiviBanking Transactions'));
    parent::preProcess();
  }

  public function buildQuery($applyLimit = TRUE) {
    $this->where();
    if ($applyLimit && empty($this->_params['charts'])) {
      $this->limit();
    }

    $this->_rowsFound = CRM_Core_DAO::singleValueQuery("
        SELECT COUNT(*)
        FROM civicrm_bank_tx
        {$this->_aliases['civicrm_bank_tx']}
        {$this->_where}"
    );

    $sql = "
        SELECT id, value_date, booking_date, amount, currency, data_parsed, status_id
        FROM civicrm_bank_tx
        {$this->_aliases['civicrm_bank_tx']}
        {$this->_where}
        ORDER BY booking_date ASC, value_date ASC
        {$this->_limit}";

    $this->addToDeveloperTab($sql);
    return $sql;
  }

  /**
   * Modify column headers.
   */
  public function modifyColumnHeaders() {
    $this->_columnHeaders['id'] = array(
      'title' => E::ts('ID'),
      'type' => CRM_Utils_Type::T_TEXT,
    );
    $this->_columnHeaders['booking_date'] = array('title' => E::ts('Booking date'), 'type' => CRM_Utils_Type::T_DATE);
    $this->_columnHeaders['value_date'] = array('title' => E::ts('Value date'), 'type' => CRM_Utils_Type::T_DATE);
    $this->_columnHeaders['amount'] = array('title' => E::ts('Amount'), 'type' => CRM_Utils_Type::T_FLOAT);
    $this->_columnHeaders['currency'] = array('title' => E::ts('Currency'), 'type' => CRM_Utils_Type::T_TEXT);
    $this->_columnHeaders['status_id'] = array('title' => E::ts('Status'), 'type' => CRM_Utils_Type::T_TEXT);
    $this->_columnHeaders['name'] = array('title' => E::ts('Name'), 'type' => CRM_Utils_Type::T_TEXT);
    $this->_columnHeaders['purpose'] = array('title' => E::ts('Purpose'), 'type' => CRM_Utils_Type::T_TEXT);
    $this->_columnHeaders['data_parsed'] = array('title' => E::ts('Data Parsed'), 'no_display' => true, 'type' => CRM_Utils_Type::T_TEXT);
  }

  /**
   * Alter display of rows.
   *
   * Iterate through the rows retrieved via SQL and make changes for display purposes,
   * such as rendering contacts as links.
   *
   * @param array $rows
   *   Rows generated by SQL, with an array for each row.
   */
  public function alterDisplay(&$rows) {
    foreach($rows as $i => $row) {
      $data = json_decode($row['data_parsed'], true);
      if (isset($data['name'])) {
        $rows[$i]['name'] = $data['name'];
      }
      if (isset($data['purpose'])) {
        $rows[$i]['purpose'] = $data['purpose'];
      }
      $rows[$i]['status_id'] = isset($this->bankingStatuses[$row['status_id']]) ? $this->bankingStatuses[$row['status_id']] : '';
    }
  }

}
